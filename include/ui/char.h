#ifndef INCLUDE_UI_CHAR_H
#define INCLUDE_UI_CHAR_H

#include <cassert>
#include <map>
#include <vector>

#include "vector_2.h"

namespace Tetris::Ui
{

struct Char final
{
    static constexpr int height{5};
    static constexpr int separator{1};

    int width{3};
    std::vector<Vector2> pixels;
};

namespace
{
    const std::map<char, Char> char_to_ui_char
    {
        {'0', {3, {
            {0, 0}, {1, 0}, {2, 0},
            {0, 1},         {2, 1},
            {0, 2},         {2, 2},
            {0, 3},         {2, 3},
            {0, 4}, {1, 4}, {2, 4},
        }}},
        {'1', {3, {
            {2, 0},
            {2, 1},
            {2, 2},
            {2, 3},
            {2, 4},
        }}},
        {'2', {3, {
            {0, 0}, {1, 0}, {2, 0},
                            {2, 1},
            {0, 2}, {1, 2}, {2, 2},
            {0, 3},
            {0, 4}, {1, 4}, {2, 4},
        }}},
        {'3', {3, {
            {0, 0}, {1, 0}, {2, 0},
                            {2, 1},
            {0, 2}, {1, 2}, {2, 2},
                            {2, 3},
            {0, 4}, {1, 4}, {2, 4},
        }}},
        {'4', {3, {
            {0, 0},         {2, 0},
            {0, 1},         {2, 1},
            {0, 2}, {1, 2}, {2, 2},
                            {2, 3},
                            {2, 4},
        }}},
        {'5', {3, {
            {0, 0}, {1, 0}, {2, 0},
            {0, 1},
            {0, 2}, {1, 2}, {2, 2},
                            {2, 3},
            {0, 4}, {1, 4}, {2, 4},
        }}},
        {'6', {3, {
            {0, 0}, {1, 0}, {2, 0},
            {0, 1},
            {0, 2}, {1, 2}, {2, 2},
            {0, 3},         {2, 3},
            {0, 4}, {1, 4}, {2, 4},
        }}},
        {'7', {3, {
            {0, 0}, {1, 0}, {2, 0},
                            {2, 1},
                            {2, 2},
                            {2, 3},
                            {2, 4},
        }}},
        {'8', {3, {
            {0, 0}, {1, 0}, {2, 0},
            {0, 1},         {2, 1},
            {0, 2}, {1, 2}, {2, 2},
            {0, 3},         {2, 3},
            {0, 4}, {1, 4}, {2, 4},
        }}},
        {'9', {3, {
            {0, 0}, {1, 0}, {2, 0},
            {0, 1},         {2, 1},
            {0, 2}, {1, 2}, {2, 2},
                            {2, 3},
            {0, 4}, {1, 4}, {2, 4},
        }}},
        {'A', {3, {
            {0, 0}, {1, 0}, {2, 0},
            {0, 1},         {2, 1},
            {0, 2}, {1, 2}, {2, 2},
            {0, 3},         {2, 3},
            {0, 4},         {2, 4},
        }}},
        {'B', {3, {
            {0, 0}, {1, 0},
            {0, 1},         {2, 1},
            {0, 2}, {1, 2},
            {0, 3},         {2, 3},
            {0, 4}, {1, 4},
        }}},
        {'C', {3, {
            {0, 0}, {1, 0}, {2, 0},
            {0, 1},
            {0, 2},
            {0, 3},
            {0, 4}, {1, 4}, {2, 4},
        }}},
        {'D', {3, {
            {0, 0}, {1, 0},
            {0, 1},         {2, 1},
            {0, 2},         {2, 2},
            {0, 3},         {2, 3},
            {0, 4}, {1, 4},
        }}},
        {'E', {3, {
            {0, 0}, {1, 0}, {2, 0},
            {0, 1},
            {0, 2}, {1, 2}, {2, 2},
            {0, 3},
            {0, 4}, {1, 4}, {2, 4},
        }}},
        {'F', {3, {
            {0, 0}, {1, 0}, {2, 0},
            {0, 1},
            {0, 2}, {1, 2}, {2, 2},
            {0, 3},
            {0, 4},
        }}},
        {'G', {4, {
            {0, 0}, {1, 0}, {2, 0}, {3, 0},
            {0, 1},
            {0, 2},         {2, 2}, {3, 2},
            {0, 3},                 {3, 3},
            {0, 4}, {1, 4}, {2, 4}, {3, 4},
        }}},
        {'H', {3, {
            {0, 0},         {2, 0},
            {0, 1},         {2, 1},
            {0, 2}, {1, 2}, {2, 2},
            {0, 3},         {2, 3},
            {0, 4},         {2, 4},
        }}},
        {'I', {1, {
            {0, 0},
            {0, 1},
            {0, 2},
            {0, 3},
            {0, 4},
        }}},
        {'J', {3, {
                            {2, 0},
                            {2, 1},
                            {2, 2},
            {0, 3},         {2, 3},
            {0, 4}, {1, 4}, {2, 4},
        }}},
        {'K', {4, {
            {0, 0},                 {3, 0},
            {0, 1},         {2, 1},
            {0, 2}, {1, 2},
            {0, 3},         {2, 3},
            {0, 4},                 {3, 4},
        }}},
        {'L', {3, {
            {0, 0},
            {0, 1},
            {0, 2},
            {0, 3},
            {0, 4}, {1, 4}, {2, 4},
        }}},
        {'M', {5, {
            {0, 0},                         {4, 0},
            {0, 1}, {1, 1},         {3, 1}, {4, 1},
            {0, 2},         {2, 2},         {4, 2},
            {0, 3},                         {4, 3},
            {0, 4},                         {4, 4},
        }}},
        {'N', {4, {
            {0, 0},                 {3, 0},
            {0, 1}, {1, 1},         {3, 1},
            {0, 2},         {2, 2}, {3, 2},
            {0, 3},                 {3, 3},
            {0, 4},                 {3, 4},
        }}},
        {'O', {3, {
            {0, 0}, {1, 0}, {2, 0},
            {0, 1},         {2, 1},
            {0, 2},         {2, 2},
            {0, 3},         {2, 3},
            {0, 4}, {1, 4}, {2, 4},
        }}},
        {'P', {3, {
            {0, 0}, {1, 0}, {2, 0},
            {0, 1},         {2, 1},
            {0, 2}, {1, 2}, {2, 2},
            {0, 3},
            {0, 4},
        }}},
        {'R', {4, {
            {0, 0}, {1, 0}, {2, 0},
            {0, 1},                 {3, 1},
            {0, 2}, {1, 2}, {2, 2},
            {0, 3},                 {3, 3},
            {0, 4},                 {3, 4},
        }}},
        {'S', {3, {
            {0, 0}, {1, 0}, {2, 0},
            {0, 1},
            {0, 2}, {1, 2}, {2, 2},
                            {2, 3},
            {0, 4}, {1, 4}, {2, 4},
        }}},
        {'T', {3, {
            {0, 0}, {1, 0}, {2, 0},
                    {1, 1},
                    {1, 2},
                    {1, 3},
                    {1, 4},
        }}},
        {'U', {3, {
            {0, 0},         {2, 0},
            {0, 1},         {2, 1},
            {0, 2},         {2, 2},
            {0, 3},         {2, 3},
            {0, 4}, {1, 4}, {2, 4},
        }}},
        {'V', {3, {
            {0, 0},         {2, 0},
            {0, 1},         {2, 1},
            {0, 2},         {2, 2},
            {0, 3},         {2, 3},
                    {1, 4},
        }}},
        {'W', {5, {
            {0, 0},                         {4, 0},
            {0, 1},                         {4, 1},
            {0, 2},                         {4, 2},
            {0, 3},         {2, 3},         {4, 3},
            {0, 4}, {1, 4},         {3, 4}, {4, 4},
        }}},
        {'X', {3, {
            {0, 0},         {2, 0},
            {0, 1},         {2, 1},
                    {1, 2},
            {0, 3},         {2, 3},
            {0, 4},         {2, 4},
        }}},
        {'Y', {3, {
            {0, 0},         {2, 0},
            {0, 1},         {2, 1},
                    {1, 2},
                    {1, 3},
                    {1, 4},
        }}},
        {'Z', {3, {
            {0, 0}, {1, 0}, {2, 0},
                            {2, 1},
                    {1, 2},
            {0, 3},
            {0, 4}, {1, 4}, {2, 4},
        }}},
        {'-', {3, {


            {0, 2}, {1, 2}, {2, 2},


        }}},
        {'!', {1, {
            {0, 0},
            {0, 1},
            {0, 2},

            {0, 4},
        }}},
        {' ', {2, {
            




        }}},
    };
}

inline Char get_char(char c)
{
    const auto it{char_to_ui_char.find(c)};
    assert(it != char_to_ui_char.end());
    return it->second;
}

}

#endif